{"version":3,"sources":["components/textError.js","copm/funcComponents/Input.js","copm/funcComponents/Radio.js","copm/funcComponents/CheckBox.js","copm/FormControl.js","copm/FormContainer.js","App.js","index.js"],"names":["TextError","props","className","children","Input","label","name","rest","htmlFor","id","component","Radio","options","field","map","op","Fragment","type","value","checked","key","CheckBox","FormControl","control","FormContainer","radioOptionsOne","radioOptionsTwo","radioOptionsRep","radioOptionsTwoRep","initialValues","radioOption","ipAdress","mask","getWay","radioOptionOne","prefDNS","altDNS","chekwifi","wirName","checkSeq","seqKey","radio1","ip1","mask1","way1","radio2","pref1","alt1","validate","values","errors","onSubmit","console","log","formik","disabled","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAUeA,MARf,SAAmBC,GACf,OACI,qBAAKC,UAAU,QAAf,SACKD,EAAME,YCWJC,MAXf,SAAeH,GAAQ,IACZI,EAAuBJ,EAAvBI,MAAOC,EAAgBL,EAAhBK,KAASC,EADL,YACYN,EADZ,kBAElB,OACI,sBAAKC,UAAU,gBAAf,UACI,uBAAOM,QAASF,EAAhB,SAAuBD,IACvB,cAAC,IAAD,aAAOI,GAAIH,EAAMA,KAAMA,GAAUC,IACjC,cAAC,IAAD,CAAcD,KAAMA,EAAMI,UAAWV,Q,MCyBlCW,MA/Bf,SAAeV,GAAQ,IACbI,EAAkCJ,EAAlCI,MAAOC,EAA2BL,EAA3BK,KAAMM,EAAqBX,EAArBW,QAAYL,EADb,YACsBN,EADtB,4BAEpB,OACE,gCACE,gCAAQI,IACR,cAAC,IAAD,yBAAOC,KAAMA,GAAUC,GAAvB,aACG,YAAgB,IAAbM,EAAY,EAAZA,MACF,OAAOD,EAAQE,KAAI,SAACC,GAClB,OACE,cAAC,IAAMC,SAAP,UACE,iCACE,+CACEd,UAAU,eACVe,KAAK,QACLR,GAAIM,EAAGG,OACHL,GAJN,IAKEK,MAAOH,EAAGG,MACVC,QAASN,EAAMK,QAAUH,EAAGG,SAE9B,uBAAOV,QAASO,EAAGG,MAAnB,SAA2BH,EAAGK,UAVbL,EAAGK,YAiBhC,cAAC,IAAD,CAAcd,KAAMA,EAAMI,UAAWV,QCT5BqB,MAlBf,SAAkBpB,GAAQ,IAChBI,EAAkCJ,EAAlCI,MAAOC,EAA2BL,EAA3BK,KAAMa,EAAqBlB,EAArBkB,QAAYZ,EADV,YACmBN,EADnB,4BAGvB,OACE,gCACE,uBAAOO,QAASF,EAAhB,SAAuBD,IACvB,cAAC,IAAD,aACEC,KAAMA,EACNW,KAAK,WACLR,GAAIH,EACJa,QAASA,GACLZ,IAEN,cAAC,IAAD,CAAcD,KAAMA,EAAMI,UAAWV,QCG5BsB,MAff,SAAqBrB,GAAQ,IACnBsB,EAAqBtB,EAArBsB,QAAYhB,EADM,YACGN,EADH,aAG1B,OAAQsB,GACN,IAAK,QACH,OAAO,cAAC,EAAD,eAAWhB,IACpB,IAAK,QACH,OAAO,cAAC,EAAD,eAAWA,IACpB,IAAK,WACH,OAAO,cAAC,EAAD,eAAcA,IACvB,QACE,OAAO,OC2PEiB,MAtQf,WACE,IAAMC,EAAkB,CACtB,CACEL,IAAK,oDACLF,MAAO,WAET,CAAEE,IAAK,6BAA8BF,MAAO,YAExCQ,EAAkB,CACtB,CAAEN,IAAK,0CAA2CF,MAAO,WACzD,CAAEE,IAAK,uCAAwCF,MAAO,YAElDS,EAAkB,CACtB,CACEP,IAAK,oDACLF,MAAO,WAET,CAAEE,IAAK,6BAA8BF,MAAO,YAGxCU,EAAqB,CACzB,CAAER,IAAK,0CAA2CF,MAAO,WACzD,CAAEE,IAAK,uCAAwCF,MAAO,YAoCxD,OACE,8BACE,cAAC,IAAD,CACEW,cApCgB,CAGpBC,YAAa,UAEbC,SAAU,GACVC,KAAM,GACNC,OAAQ,GAERC,eAAgB,UAEhBC,QAAS,GACTC,OAAQ,GAERC,UAAU,EACVC,QAAS,GACTC,UAAU,EACVC,OAAQ,GAERC,OAAQ,UAERC,IAAK,GACLC,MAAO,GACPC,KAAM,GAENC,OAAQ,UAERC,MAAO,GACPC,KAAM,IASFC,SAAU,SAACC,GACT,IAAMC,EAAS,GA+Bf,OA7BGD,EAAOlB,UAGe,YAAvBkB,EAAOnB,cAEPoB,EAAOnB,SAAW,YAEfkB,EAAOjB,MAA+B,YAAvBiB,EAAOnB,cACzBoB,EAAOlB,KAAO,YAEXiB,EAAOd,SAAqC,YAA1Bc,EAAOf,iBAC5BgB,EAAOf,QAAU,YAEdc,EAAOX,UAA+B,IAApBW,EAAOZ,WAC5Ba,EAAOZ,QAAU,YAEdW,EAAOT,SAA8B,IAApBS,EAAOV,WAC3BW,EAAOV,OAAS,YAEbS,EAAOP,KAAyB,YAAlBO,EAAOR,SACxBS,EAAOR,IAAM,YAEVO,EAAON,OAA2B,YAAlBM,EAAOR,SAC1BS,EAAOP,MAAQ,YAEZM,EAAOH,OAA2B,YAAlBG,EAAOJ,SAC1BK,EAAOJ,MAAQ,YAGVI,GAETC,SAxCW,SAACF,GAAD,OAAYG,QAAQC,IAAI,YAAaJ,IAIlD,SAsCG,SAACK,GAAD,OACC,eAAC,IAAD,CAAMpD,UAAU,UAAhB,UACE,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,aAAf,UACE,mDACA,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CACEqB,QAAQ,QACRjB,KAAK,cACLM,QAASa,MAGb,sBAAKvB,UAAU,eAAf,UACE,cAAC,EAAD,CACEqB,QAAQ,QACRN,KAAK,OACLZ,MAAM,cACNC,KAAK,WACJiD,SAAwC,YAA9BD,EAAOL,OAAOnB,cAG3B,cAAC,EAAD,CACEP,QAAQ,QACRN,KAAK,OACLZ,MAAM,gBACNC,KAAK,OACLiD,SAAwC,YAA9BD,EAAOL,OAAOnB,cAE1B,cAAC,EAAD,CACEP,QAAQ,QACRN,KAAK,OACLZ,MAAM,kBACNC,KAAK,SACLiD,SAAwC,YAA9BD,EAAOL,OAAOnB,iBAG5B,qBAAK5B,UAAU,eAAf,SACE,cAAC,EAAD,CACEqB,QAAQ,QACRjB,KAAK,iBACLM,QAASc,MAGb,sBAAKxB,UAAU,eAAf,UACE,cAAC,EAAD,CACEqB,QAAQ,QACRN,KAAK,OACLZ,MAAM,yBACNC,KAAK,UACLiD,SAA2C,YAAjCD,EAAOL,OAAOf,iBAE1B,cAAC,EAAD,CACEX,QAAQ,QACRN,KAAK,OACLZ,MAAM,yBACNC,KAAK,SACLiD,SAA2C,YAAjCD,EAAOL,OAAOf,uBAI9B,sBAAKhC,UAAU,cAAf,UACE,mDACA,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CACEqB,QAAQ,WACRjB,KAAK,WACLD,MAAM,cACNc,QAASmC,EAAOL,OAAOZ,aAG3B,qBAAKnC,UAAU,eAAf,SACE,cAAC,EAAD,CACEqB,QAAQ,QACRN,KAAK,OACLZ,MAAM,0BACNC,KAAK,UACLiD,UAAqC,IAA3BD,EAAOL,OAAOZ,aAG5B,qBAAKnC,UAAU,eAAf,SACE,cAAC,EAAD,CACEqB,QAAQ,WACRjB,KAAK,WACLD,MAAM,2BACNc,QAASmC,EAAOL,OAAOV,SACvBgB,UAAqC,IAA3BD,EAAOL,OAAOZ,aAG5B,qBAAKnC,UAAU,eAAf,SACE,cAAC,EAAD,CACEqB,QAAQ,QACRN,KAAK,OACLZ,MAAM,iBACNC,KAAK,SACLiD,UAAqC,IAA3BD,EAAOL,OAAOV,aAI5B,qBAAKrC,UAAU,eAAf,SACE,cAAC,EAAD,CACEqB,QAAQ,QACRjB,KAAK,SACLM,QAASe,MAGb,sBAAKzB,UAAU,eAAf,UACE,cAAC,EAAD,CACEqB,QAAQ,QACRN,KAAK,OACLZ,MAAM,cACNC,KAAK,MACLiD,SAAmC,YAAzBD,EAAOL,OAAOR,SAE1B,cAAC,EAAD,CACElB,QAAQ,QACRN,KAAK,OACLZ,MAAM,gBACNC,KAAK,QACLiD,SAAmC,YAAzBD,EAAOL,OAAOR,SAE1B,cAAC,EAAD,CACElB,QAAQ,QACRN,KAAK,OACLZ,MAAM,kBACNC,KAAK,OACLiD,SAAmC,YAAzBD,EAAOL,OAAOR,YAG5B,qBAAKvC,UAAU,eAAf,SACE,cAAC,EAAD,CACEqB,QAAQ,QACRjB,KAAK,SACLM,QAASgB,MAGb,sBAAK1B,UAAU,eAAf,UACE,cAAC,EAAD,CACEqB,QAAQ,QACRN,KAAK,OACLZ,MAAM,yBACNC,KAAK,QACLiD,SAAmC,YAAzBD,EAAOL,OAAOJ,SAE1B,cAAC,EAAD,CACEtB,QAAQ,QACRN,KAAK,OACLZ,MAAM,yBACNC,KAAK,OACLiD,SAAmC,YAAzBD,EAAOL,OAAOJ,kBAKhC,sBAAK3C,UAAU,aAAf,UACE,wBAAQe,KAAK,SAAb,kBACA,wBAAQA,KAAK,QAAb,gCCtPCuC,EARH,WACV,OACE,qBAAKtD,UAAU,MAAf,SACE,cAAC,EAAD,O,MCFNuD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e68b4c4a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction TextError(props) {\r\n    return (\r\n        <div className='error'>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextError\r\n","import React from 'react'\r\nimport {Field, ErrorMessage} from \"formik\"\r\nimport TextError from '../../components/textError'\r\n\r\n\r\nfunction Input(props) {\r\n    const {label, name, ...rest}= props\r\n    return (\r\n        <div className=\"form__control\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <Field id={name} name={name} {...rest}/>\r\n            <ErrorMessage name={name} component={TextError}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input\r\n","import React from \"react\";\r\nimport { Field, ErrorMessage } from \"formik\";\r\nimport TextError from \"../../components/textError\";\r\nimport \"../CssForm.css\";\r\n\r\nfunction Radio(props) {\r\n  const { label, name, options, ...rest } = props;\r\n  return (\r\n    <div>\r\n      <label>{label}</label>\r\n      <Field name={name} {...rest}>\r\n        {({ field }) => {\r\n          return options.map((op) => {\r\n            return (\r\n              <React.Fragment key={op.key}>\r\n                <span>\r\n                  <input\r\n                    className=\"radio__block\"\r\n                    type=\"radio\"\r\n                    id={op.value}\r\n                    {...field}\r\n                    value={op.value}\r\n                    checked={field.value === op.value}\r\n                  />\r\n                  <label htmlFor={op.value}>{op.key}</label>\r\n                </span>\r\n              </React.Fragment>\r\n            );\r\n          });\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Radio;\r\n","import React from \"react\";\r\nimport { Field, ErrorMessage } from \"formik\";\r\nimport TextError from \"../../components/textError\";\r\n\r\nfunction CheckBox(props) {\r\n  const { label, name, checked, ...rest } = props;\r\n\r\n  return (\r\n    <div>\r\n      <label htmlFor={name}>{label}</label>\r\n      <Field\r\n        name={name}\r\n        type=\"checkbox\"\r\n        id={name}\r\n        checked={checked}\r\n        {...rest}\r\n      />\r\n      <ErrorMessage name={name} component={TextError} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckBox;\r\n\r\n// {\r\n  /* <Field name={name} {...rest}>\r\n{({ field }) => {\r\n  return options.map((op) => {\r\n    return (\r\n      <React.Fragment key={op.key}>\r\n        <input\r\n          type=\"checkbox\"\r\n          id={op.value}\r\n          {...field}\r\n          value={op.value}\r\n          checked={field.value.includes(op.value)}\r\n        />\r\n        <label htmlFor={op.value}>{op.key}</label>\r\n      </React.Fragment>\r\n    );\r\n  });\r\n}}\r\n</Field> */\r\n\r\n","import React from \"react\";\r\nimport Input from \"./funcComponents/Input\";\r\nimport Radio from \"./funcComponents/Radio\";\r\nimport CheckBox from \"./funcComponents/CheckBox\";\r\n\r\nfunction FormControl(props) {\r\n  const { control, ...rest } = props;\r\n\r\n  switch (control) {\r\n    case \"input\":\r\n      return <Input {...rest} />;\r\n    case \"radio\":\r\n      return <Radio {...rest} />;\r\n    case \"checkbox\":\r\n      return <CheckBox {...rest} />;\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\nexport default FormControl;\r\n","import React from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport FormControl from \"./FormControl\";\r\nimport \"./CssForm.css\";\r\n\r\nfunction FormContainer() {\r\n  const radioOptionsOne = [\r\n    {\r\n      key: \"Obtain an IP address automatically (DHCP / BootP)\",\r\n      value: \"option1\",\r\n    },\r\n    { key: \"Use the following address:\", value: \"option2\" },\r\n  ];\r\n  const radioOptionsTwo = [\r\n    { key: \"Obtain DNS server address automatically\", value: \"option3\" },\r\n    { key: \"Use the following DS server address:\", value: \"option4\" },\r\n  ];\r\n  const radioOptionsRep = [\r\n    {\r\n      key: \"Obtain an IP address automatically (DHCP / BootP)\",\r\n      value: \"option5\",\r\n    },\r\n    { key: \"Use the following address:\", value: \"option6\" },\r\n  ];\r\n\r\n  const radioOptionsTwoRep = [\r\n    { key: \"Obtain DNS server address automatically\", value: \"option7\" },\r\n    { key: \"Use the following DS server address:\", value: \"option8\" },\r\n  ];\r\n\r\n  const initialValues = {\r\n\r\n    //FIRST RADIO\r\n    radioOption: \"option1\",\r\n    // FIRST FORM\r\n    ipAdress: \"\",\r\n    mask: \"\",\r\n    getWay: \"\",\r\n    // SECOND RADIO\r\n    radioOptionOne: \"option3\",\r\n    // SECOND FORM\r\n    prefDNS: \"\",\r\n    altDNS: \"\",\r\n    //CHECK BOX AREAS\r\n    chekwifi: false,\r\n    wirName: \"\",\r\n    checkSeq: false,\r\n    seqKey: \"\",\r\n    // REPEATE FORM\r\n    radio1: \"option5\",\r\n    // ===\r\n    ip1: \"\",\r\n    mask1: \"\",\r\n    way1: \"\",\r\n    // ====\r\n    radio2: \"option7\",\r\n    // ===\r\n    pref1: \"\",\r\n    alt1: \"\",\r\n  };\r\n\r\n  const onSubmit = (values) => console.log(\"Form data\", values);\r\n\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validate={(values) => {\r\n          const errors = {};\r\n          if (\r\n            !values.ipAdress\r\n            &&\r\n            // values.etcSet[0].radio === \"option2\"\r\n            values.radioOption === \"option2\"\r\n          ) {\r\n            errors.ipAdress = \"Required\";\r\n          }\r\n          if (!values.mask && values.radioOption === \"option2\") {\r\n            errors.mask = \"Required\";\r\n          }\r\n          if (!values.prefDNS && values.radioOptionOne === \"option4\") {\r\n            errors.prefDNS = \"Required\";\r\n          }\r\n          if (!values.wirName && values.chekwifi === true) {\r\n            errors.wirName = \"Required\";\r\n          }\r\n          if (!values.seqKey && values.checkSeq === true) {\r\n            errors.seqKey = \"Required\";\r\n          }\r\n          if (!values.ip1 && values.radio1 === \"option6\") {\r\n            errors.ip1 = \"Required\";\r\n          }\r\n          if (!values.mask1 && values.radio1 === \"option6\") {\r\n            errors.mask1 = \"Required\";\r\n          }\r\n          if (!values.pref1 && values.radio2 === \"option8\") {\r\n            errors.pref1 = \"Required\";\r\n          }\r\n\r\n          return errors;\r\n        }}\r\n        onSubmit={onSubmit}\r\n      >\r\n        {(formik) => (\r\n          <Form className=\"wrapper\">\r\n            <div className=\"display\">\r\n              <div className=\"left__side\">\r\n                <h2>Ethernet Settings</h2>\r\n                <div className=\"radio__block\">\r\n                  <FormControl\r\n                    control=\"radio\"\r\n                    name=\"radioOption\"\r\n                    options={radioOptionsOne}\r\n                  />\r\n                </div>\r\n                <div className=\"input__block\">\r\n                  <FormControl\r\n                    control=\"input\"\r\n                    type=\"text\"\r\n                    label=\"IP Adress *\"\r\n                    name=\"ipAdress\"\r\n                     disabled={formik.values.radioOption === \"option1\"}\r\n                  />\r\n\r\n                  <FormControl\r\n                    control=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Subnet Mask *\"\r\n                    name=\"mask\"\r\n                    disabled={formik.values.radioOption === \"option1\"}\r\n                  />\r\n                  <FormControl\r\n                    control=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Default Gateway\"\r\n                    name=\"getWay\"\r\n                    disabled={formik.values.radioOption === \"option1\"}\r\n                  />\r\n                </div>\r\n                <div className=\"radio__block\">\r\n                  <FormControl\r\n                    control=\"radio\"\r\n                    name=\"radioOptionOne\"\r\n                    options={radioOptionsTwo}\r\n                  />\r\n                </div>\r\n                <div className=\"input__block\">\r\n                  <FormControl\r\n                    control=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Preferred DNS server *\"\r\n                    name=\"prefDNS\"\r\n                    disabled={formik.values.radioOptionOne === \"option3\"}\r\n                  />\r\n                  <FormControl\r\n                    control=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Alternative DNS server\"\r\n                    name=\"altDNS\"\r\n                    disabled={formik.values.radioOptionOne === \"option3\"}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"right__side\">\r\n                <h2>Wirelles Settings</h2>\r\n                <div className=\"radio__block\">\r\n                  <FormControl\r\n                    control=\"checkbox\"\r\n                    name=\"chekwifi\"\r\n                    label=\"Enable wifi\"\r\n                    checked={formik.values.chekwifi}\r\n                  />\r\n                </div>\r\n                <div className=\"input__block\">\r\n                  <FormControl\r\n                    control=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Wirelles Network Name* \"\r\n                    name=\"wirName\"\r\n                    disabled={formik.values.chekwifi === false}\r\n                  />\r\n                </div>\r\n                <div className=\"radio__block\">\r\n                  <FormControl\r\n                    control=\"checkbox\"\r\n                    name=\"checkSeq\"\r\n                    label=\"Enable Wirelles security\"\r\n                    checked={formik.values.checkSeq}\r\n                    disabled={formik.values.chekwifi === false}\r\n                  />\r\n                </div>\r\n                <div className=\"input__block\">\r\n                  <FormControl\r\n                    control=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Security Key* \"\r\n                    name=\"seqKey\"\r\n                    disabled={formik.values.checkSeq === false}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"radio__block\">\r\n                  <FormControl\r\n                    control=\"radio\"\r\n                    name=\"radio1\"\r\n                    options={radioOptionsRep}\r\n                  />\r\n                </div>\r\n                <div className=\"input__block\">\r\n                  <FormControl\r\n                    control=\"input\"\r\n                    type=\"text\"\r\n                    label=\"IP Adress *\"\r\n                    name=\"ip1\"\r\n                    disabled={formik.values.radio1 === \"option5\"}\r\n                  />\r\n                  <FormControl\r\n                    control=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Subnet Mask *\"\r\n                    name=\"mask1\"\r\n                    disabled={formik.values.radio1 === \"option5\"}\r\n                  />\r\n                  <FormControl\r\n                    control=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Default Gateway\"\r\n                    name=\"way1\"\r\n                    disabled={formik.values.radio1 === \"option5\"}\r\n                  />\r\n                </div>\r\n                <div className=\"radio__block\">\r\n                  <FormControl\r\n                    control=\"radio\"\r\n                    name=\"radio2\"\r\n                    options={radioOptionsTwoRep}\r\n                  />\r\n                </div>\r\n                <div className=\"input__block\">\r\n                  <FormControl\r\n                    control=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Preferred DNS server *\"\r\n                    name=\"pref1\"\r\n                    disabled={formik.values.radio2 === \"option7\"}\r\n                  />\r\n                  <FormControl\r\n                    control=\"input\"\r\n                    type=\"text\"\r\n                    label=\"Alternative DNS server\"\r\n                    name=\"alt1\"\r\n                    disabled={formik.values.radio2 === \"option7\"}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"btn__block\">\r\n              <button type=\"submit\">SAVE</button>\r\n              <button type=\"reset\">Cancel</button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormContainer;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport FormContainer from \"./copm/FormContainer\";\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <FormContainer/>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}